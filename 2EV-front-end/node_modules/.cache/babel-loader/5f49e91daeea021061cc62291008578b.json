{"ast":null,"code":"import _slicedToArray from \"/Users/thienanvu/Desktop/2EV-front-end/2EV-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thienanvu/Desktop/2EV-front-end/2EV-front-end/src/components/Calendar/Calendar.jsx\";\nimport React, { Component } from \"react\";\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./calendar.css\";\nimport Swal from \"sweetalert2\";\nvar localizer = momentLocalizer(moment);\n\nvar CalendarComponent = function CalendarComponent(_ref) {\n  var events = _ref.events,\n      onChange = _ref.onChange;\n\n  var handleSwalSelect = function handleSwalSelect(_ref2) {\n    var start = _ref2.start,\n        end = _ref2.end;\n    Swal.mixin({\n      input: \"text\",\n      confirmButtonText: \"Next &rarr;\",\n      showCancelButton: true,\n      progressSteps: [\"1\", \"2\", \"3\"]\n    }).queue([\"Name\", \"Phone Number\", \"Desired Service\"]).then(function (result) {\n      if (result.value) {\n        var _result$value = _slicedToArray(result.value, 3),\n            name = _result$value[0],\n            number = _result$value[1],\n            service = _result$value[2];\n\n        onChange({\n          start: start,\n          end: end,\n          title: service,\n          name: name,\n          number: number\n        });\n      }\n    });\n  };\n\n  var handleView = function handleView(event) {\n    console.log(\"Event =>\", event);\n    Swal.fire(event.title);\n  }; // remapping date to standard format\n\n\n  var mapToRBCFormat = function mapToRBCFormat(e) {\n    return Object.assign({}, e, {\n      title: e.title,\n      start: new Date(e.start),\n      end: new Date(e.end),\n      name: e.name,\n      number: e.number\n    });\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Calendar, {\n    events: events.map(mapToRBCFormat),\n    min: new Date(0, 0, 0, 9, 0, 0),\n    max: new Date(0, 0, 0, 18, 0, 0),\n    selectable: true,\n    dayLayoutAlgorithm: \"no-overlap\",\n    views: ['week', 'day'],\n    defaultView: Views.WEEK,\n    defaultDate: moment().toDate(),\n    localizer: localizer,\n    onSelectEvent: function onSelectEvent(event) {\n      return handleView(event);\n    },\n    onSelectSlot: handleSwalSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n};\n\nexport default CalendarComponent;","map":{"version":3,"sources":["/Users/thienanvu/Desktop/2EV-front-end/2EV-front-end/src/components/Calendar/Calendar.jsx"],"names":["React","Component","Calendar","momentLocalizer","Views","moment","Swal","localizer","CalendarComponent","events","onChange","handleSwalSelect","start","end","mixin","input","confirmButtonText","showCancelButton","progressSteps","queue","then","result","value","name","number","service","title","handleView","event","console","log","fire","mapToRBCFormat","e","Object","assign","Date","width","map","WEEK","toDate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./calendar.css\";\nimport Swal from \"sweetalert2\";\n\nconst localizer = momentLocalizer(moment);\n\nconst CalendarComponent = ({ events, onChange }) => {\n  const handleSwalSelect = ({ start, end }) => {\n    Swal.mixin({\n      input: \"text\",\n      confirmButtonText: \"Next &rarr;\",\n      showCancelButton: true,\n      progressSteps: [\"1\", \"2\", \"3\"]\n    })\n      .queue([\"Name\", \"Phone Number\", \"Desired Service\"])\n      .then(result => {\n        if (result.value) {\n          const [name, number, service] = result.value;\n          onChange({\n            start,\n            end,\n            title: service,\n            name,\n            number\n          });\n        }\n      });\n  };\n\n  const handleView = event => {\n    console.log(\"Event =>\", event);\n    Swal.fire(event.title);\n  };\n\n  // remapping date to standard format\n  const mapToRBCFormat = e =>\n    Object.assign({}, e, {\n      title: e.title,\n      start: new Date(e.start),\n      end: new Date(e.end),\n      name: e.name,\n      number: e.number\n    });\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <Calendar\n        events={events.map(mapToRBCFormat)}\n        min={new Date(0, 0, 0, 9, 0, 0)}\n        max={new Date(0, 0, 0, 18, 0, 0)}\n        selectable\n        dayLayoutAlgorithm=\"no-overlap\"\n        views={['week', 'day']}\n        defaultView={Views.WEEK}\n        defaultDate={moment().toDate()}\n        localizer={localizer}\n        onSelectEvent={event => handleView(event)}\n        onSelectSlot={handleSwalSelect}\n      />\n    </div>\n  );\n};\n\nexport default CalendarComponent;\n"]},"metadata":{},"sourceType":"module"}