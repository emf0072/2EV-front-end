{"ast":null,"code":"import _defineProperty from \"/Users/thienan/Desktop/Project2/2EV-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/thienan/Desktop/Project2/2EV-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"/Users/thienan/Desktop/Project2/2EV-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/thienan/Desktop/Project2/2EV-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thienan/Desktop/Project2/2EV-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/thienan/Desktop/Project2/2EV-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/thienan/Desktop/Project2/2EV-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thienan/Desktop/Project2/2EV-front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/thienan/Desktop/Project2/2EV-front-end/src/views/BookingPage/BookingPage.js\";\nimport React, { Component } from \"react\";\nimport AppBar from \"material-ui/AppBar\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport moment from \"moment\";\nimport DatePicker from \"material-ui/DatePicker\";\nimport Dialog from \"material-ui/Dialog\";\nimport SelectField from \"material-ui/SelectField\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport TextField from \"material-ui/TextField\";\nimport SnackBar from \"material-ui/Snackbar\";\nimport Card from \"material-ui/Card\";\nimport { Step, Stepper, StepLabel, StepContent } from \"material-ui/Stepper\";\nimport { RadioButton, RadioButtonGroup } from \"material-ui/RadioButton\";\nimport axios from \"axios\";\nvar API_BASE = \"http://localhost:8080/\";\n\nvar AppointmentApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppointmentApp, _Component);\n\n  function AppointmentApp(props, context) {\n    var _this;\n\n    _classCallCheck(this, AppointmentApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppointmentApp).call(this, props, context));\n\n    _this.handleNext = function () {\n      var stepIndex = _this.state.stepIndex;\n\n      _this.setState({\n        stepIndex: stepIndex + 1,\n        finished: stepIndex >= 2\n      });\n    };\n\n    _this.handlePrev = function () {\n      var stepIndex = _this.state.stepIndex;\n\n      if (stepIndex > 0) {\n        _this.setState({\n          stepIndex: stepIndex - 1\n        });\n      }\n    };\n\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      schedule: [],\n      confirmationModalOpen: false,\n      appointmentDateSelected: false,\n      appointmentMeridiem: 0,\n      validEmail: true,\n      validPhone: true,\n      finished: false,\n      smallScreen: window.innerWidth < 768,\n      stepIndex: 0\n    };\n    return _this;\n  }\n\n  _createClass(AppointmentApp, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.get(API_BASE + \"api/retrieveSlots\").then(function (response) {\n        console.log(\"response via db: \", response.data);\n\n        _this2.handleDBReponse(response.data);\n      });\n    }\n  }, {\n    key: \"handleSetAppointmentDate\",\n    value: function handleSetAppointmentDate(date) {\n      this.setState({\n        appointmentDate: date,\n        confirmationTextVisible: true\n      });\n    }\n  }, {\n    key: \"handleSetAppointmentSlot\",\n    value: function handleSetAppointmentSlot(slot) {\n      this.setState({\n        appointmentSlot: slot\n      });\n    }\n  }, {\n    key: \"handleSetAppointmentMeridiem\",\n    value: function handleSetAppointmentMeridiem(meridiem) {\n      this.setState({\n        appointmentMeridiem: meridiem\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var _this3 = this;\n\n      this.setState({\n        confirmationModalOpen: false\n      });\n      var newAppointment = {\n        name: this.state.firstName + \" \" + this.state.lastName,\n        email: this.state.email,\n        phone: this.state.phone,\n        slot_date: moment(this.state.appointmentDate).format(\"YYYY-DD-MM\"),\n        slot_time: this.state.appointmentSlot\n      };\n      axios.post(API_BASE + \"api/appointmentCreate\", newAppointment).then(function (response) {\n        return _this3.setState({\n          confirmationSnackbarMessage: \"Appointment succesfully added!\",\n          confirmationSnackbarOpen: true,\n          processed: true\n        });\n      })[\"catch\"](function (err) {\n        console.log(err);\n        return _this3.setState({\n          confirmationSnackbarMessage: \"Appointment failed to save.\",\n          confirmationSnackbarOpen: true\n        });\n      });\n    }\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail(email) {\n      var regex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n      return regex.test(email) ? this.setState({\n        email: email,\n        validEmail: true\n      }) : this.setState({\n        validEmail: false\n      });\n    }\n  }, {\n    key: \"validatePhone\",\n    value: function validatePhone(phoneNumber) {\n      var regex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n      return regex.test(phoneNumber) ? this.setState({\n        phone: phoneNumber,\n        validPhone: true\n      }) : this.setState({\n        validPhone: false\n      });\n    }\n  }, {\n    key: \"checkDisableDate\",\n    value: function checkDisableDate(day) {\n      var dateString = moment(day).format(\"YYYY-DD-MM\");\n      return this.state.schedule[dateString] === true || moment(day).startOf(\"day\").diff(moment().startOf(\"day\")) < 0;\n    }\n  }, {\n    key: \"handleDBReponse\",\n    value: function handleDBReponse(response) {\n      var appointments = response;\n      var today = moment().startOf(\"day\"); //start of today 12 am\n\n      var initialSchedule = {};\n      initialSchedule[today.format(\"YYYY-DD-MM\")] = true;\n      var schedule = !appointments.length ? initialSchedule : appointments.reduce(function (currentSchedule, appointment) {\n        var slot_date = appointment.slot_date,\n            slot_time = appointment.slot_time;\n        var dateString = moment(slot_date, \"YYYY-DD-MM\").format(\"YYYY-DD-MM\");\n        !currentSchedule[slot_date] ? currentSchedule[dateString] = Array(8).fill(false) : null;\n        Array.isArray(currentSchedule[dateString]) ? currentSchedule[dateString][slot_time] = true : null;\n        return currentSchedule;\n      }, initialSchedule);\n\n      for (var day in schedule) {\n        var slots = schedule[day];\n        slots.length ? slots.every(function (slot) {\n          return slot === true;\n        }) ? schedule[day] = true : null : null;\n      }\n\n      this.setState({\n        schedule: schedule\n      });\n    }\n  }, {\n    key: \"renderAppointmentConfirmation\",\n    value: function renderAppointmentConfirmation() {\n      var spanStyle = {\n        color: \"#00C853\"\n      };\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Name:\", \" \", React.createElement(\"span\", {\n        style: spanStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.firstName, \" \", this.state.lastName)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Number: \", React.createElement(\"span\", {\n        style: spanStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.state.phone)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Email: \", React.createElement(\"span\", {\n        style: spanStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.state.email)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Appointment:\", \" \", React.createElement(\"span\", {\n        style: spanStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, moment(this.state.appointmentDate).format(\"dddd[,] MMMM Do[,] YYYY\")), \" \", \"at\", \" \", React.createElement(\"span\", {\n        style: spanStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, moment().hour(9).minute(0).add(this.state.appointmentSlot, \"hours\").format(\"h:mm a\"))));\n    }\n  }, {\n    key: \"renderAppointmentTimes\",\n    value: function renderAppointmentTimes() {\n      var _this4 = this;\n\n      if (!this.state.isLoading) {\n        var slots = _toConsumableArray(Array(8).keys());\n\n        return slots.map(function (slot) {\n          var appointmentDateString = moment(_this4.state.appointmentDate).format(\"YYYY-DD-MM\");\n          var time1 = moment().hour(9).minute(0).add(slot, \"hours\");\n          var time2 = moment().hour(9).minute(0).add(slot + 1, \"hours\");\n          var scheduleDisabled = _this4.state.schedule[appointmentDateString] ? _this4.state.schedule[moment(_this4.state.appointmentDate).format(\"YYYY-DD-MM\")][slot] : false;\n          var meridiemDisabled = _this4.state.appointmentMeridiem ? time1.format(\"a\") === \"am\" : time1.format(\"a\") === \"pm\";\n          return React.createElement(RadioButton, {\n            label: time1.format(\"h:mm a\") + \" - \" + time2.format(\"h:mm a\"),\n            key: slot,\n            value: slot,\n            style: {\n              marginBottom: 15,\n              display: meridiemDisabled ? \"none\" : \"inherit\"\n            },\n            disabled: scheduleDisabled || meridiemDisabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          });\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderStepActions\",\n    value: function renderStepActions(step) {\n      var stepIndex = this.state.stepIndex;\n      return React.createElement(\"div\", {\n        style: {\n          margin: \"12px 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(RaisedButton, {\n        label: stepIndex === 2 ? \"Finish\" : \"Next\",\n        disableTouchRipple: true,\n        disableFocusRipple: true,\n        primary: true,\n        onClick: this.handleNext,\n        backgroundColor: \"#00C853 !important\",\n        style: {\n          marginRight: 12,\n          backgroundColor: \"#00C853\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), step > 0 && React.createElement(FlatButton, {\n        label: \"Back\",\n        disabled: stepIndex === 0,\n        disableTouchRipple: true,\n        disableFocusRipple: true,\n        onClick: this.handlePrev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this,\n          _React$createElement;\n\n      var _this$state = this.state,\n          finished = _this$state.finished,\n          isLoading = _this$state.isLoading,\n          smallScreen = _this$state.smallScreen,\n          stepIndex = _this$state.stepIndex,\n          confirmationModalOpen = _this$state.confirmationModalOpen,\n          confirmationSnackbarOpen = _this$state.confirmationSnackbarOpen,\n          data = _objectWithoutProperties(_this$state, [\"finished\", \"isLoading\", \"smallScreen\", \"stepIndex\", \"confirmationModalOpen\", \"confirmationSnackbarOpen\"]);\n\n      var contactFormFilled = data.firstName && data.lastName && data.phone && data.email && data.validPhone && data.validEmail;\n\n      var DatePickerExampleSimple = function DatePickerExampleSimple() {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(DatePicker, {\n          hintText: \"Select Date\",\n          mode: smallScreen ? \"portrait\" : \"landscape\",\n          onChange: function onChange(n, date) {\n            return _this5.handleSetAppointmentDate(date);\n          },\n          shouldDisableDate: function shouldDisableDate(day) {\n            return _this5.checkDisableDate(day);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }));\n      };\n\n      var modalActions = [React.createElement(FlatButton, {\n        label: \"Cancel\",\n        primary: false,\n        onClick: function onClick() {\n          return _this5.setState({\n            confirmationModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(FlatButton, {\n        label: \"Confirm\",\n        style: {\n          backgroundColor: \"#00C853 !important\"\n        },\n        primary: true,\n        onClick: function onClick() {\n          return _this5.handleSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      })];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        title: \"Appointment Scheduler\",\n        iconClassNameRight: \"muidocs-icon-navigation-expand-more\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), React.createElement(\"section\", {\n        style: {\n          maxWidth: !smallScreen ? \"80%\" : \"100%\",\n          margin: \"auto\",\n          marginTop: !smallScreen ? 20 : 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          padding: \"12px 12px 25px 12px\",\n          height: smallScreen ? \"100vh\" : null\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        activeStep: stepIndex,\n        orientation: \"vertical\",\n        linear: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(Step, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(StepLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, \"Choose an available day for your appointment\"), React.createElement(StepContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, DatePickerExampleSimple(), this.renderStepActions(0))), React.createElement(Step, {\n        disabled: !data.appointmentDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(StepLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Choose an available time for your appointment\"), React.createElement(StepContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(SelectField, {\n        floatingLabelText: \"AM/PM\",\n        value: data.appointmentMeridiem,\n        onChange: function onChange(evt, key, payload) {\n          return _this5.handleSetAppointmentMeridiem(payload);\n        },\n        selectionRenderer: function selectionRenderer(value) {\n          return value ? \"PM\" : \"AM\";\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: 0,\n        primaryText: \"AM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), React.createElement(MenuItem, {\n        value: 1,\n        primaryText: \"PM\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      })), React.createElement(RadioButtonGroup, {\n        style: {\n          marginTop: 15,\n          marginLeft: 15\n        },\n        name: \"appointmentTimes\",\n        defaultSelected: data.appointmentSlot,\n        onChange: function onChange(evt, val) {\n          return _this5.handleSetAppointmentSlot(val);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, this.renderAppointmentTimes()), this.renderStepActions(1))), React.createElement(Step, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(StepLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"Share your contact information with us and we'll send you a reminder\"), React.createElement(StepContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        style: {\n          display: \"block\"\n        },\n        name: \"first_name\",\n        hintText: \"First Name\",\n        floatingLabelText: \"First Name\",\n        onChange: function onChange(evt, newValue) {\n          return _this5.setState({\n            firstName: newValue\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        style: {\n          display: \"block\"\n        },\n        name: \"last_name\",\n        hintText: \"Last Name\",\n        floatingLabelText: \"Last Name\",\n        onChange: function onChange(evt, newValue) {\n          return _this5.setState({\n            lastName: newValue\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        style: {\n          display: \"block\"\n        },\n        name: \"email\",\n        hintText: \"youraddress@mail.com\",\n        floatingLabelText: \"Email\",\n        errorText: data.validEmail ? null : \"Enter a valid email address\",\n        onChange: function onChange(evt, newValue) {\n          return _this5.validateEmail(newValue);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        style: {\n          display: \"block\"\n        },\n        name: \"phone\",\n        hintText: \"+2348995989\",\n        floatingLabelText: \"Phone\",\n        errorText: data.validPhone ? null : \"Enter a valid phone number\",\n        onChange: function onChange(evt, newValue) {\n          return _this5.validatePhone(newValue);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }), React.createElement(RaisedButton, (_React$createElement = {\n        style: {\n          display: \"block\",\n          backgroundColor: \"#00C853\"\n        },\n        label: contactFormFilled ? \"Schedule\" : \"Fill out your information to schedule\",\n        labelPosition: \"before\",\n        primary: true,\n        fullWidth: true,\n        onClick: function onClick() {\n          return _this5.setState({\n            confirmationModalOpen: !_this5.state.confirmationModalOpen\n          });\n        },\n        disabled: !contactFormFilled || data.processed\n      }, _defineProperty(_React$createElement, \"style\", {\n        marginTop: 20,\n        maxWidth: 100\n      }), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)))), this.renderStepActions(2))))), React.createElement(Dialog, {\n        modal: true,\n        open: confirmationModalOpen,\n        actions: modalActions,\n        title: \"Confirm your appointment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, this.renderAppointmentConfirmation()), React.createElement(SnackBar, {\n        open: confirmationSnackbarOpen || isLoading,\n        message: isLoading ? \"Loading... \" : data.confirmationSnackbarMessage || \"\",\n        autoHideDuration: 10000,\n        onRequestClose: function onRequestClose() {\n          return _this5.setState({\n            confirmationSnackbarOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AppointmentApp;\n}(Component);\n\nexport default AppointmentApp;","map":{"version":3,"sources":["/Users/thienan/Desktop/Project2/2EV-front-end/src/views/BookingPage/BookingPage.js"],"names":["React","Component","AppBar","RaisedButton","FlatButton","moment","DatePicker","Dialog","SelectField","MenuItem","TextField","SnackBar","Card","Step","Stepper","StepLabel","StepContent","RadioButton","RadioButtonGroup","axios","API_BASE","AppointmentApp","props","context","handleNext","stepIndex","state","setState","finished","handlePrev","firstName","lastName","email","schedule","confirmationModalOpen","appointmentDateSelected","appointmentMeridiem","validEmail","validPhone","smallScreen","window","innerWidth","get","then","response","console","log","data","handleDBReponse","date","appointmentDate","confirmationTextVisible","slot","appointmentSlot","meridiem","newAppointment","name","phone","slot_date","format","slot_time","post","confirmationSnackbarMessage","confirmationSnackbarOpen","processed","err","regex","test","phoneNumber","day","dateString","startOf","diff","appointments","today","initialSchedule","length","reduce","currentSchedule","appointment","Array","fill","isArray","slots","every","spanStyle","color","hour","minute","add","isLoading","keys","map","appointmentDateString","time1","time2","scheduleDisabled","meridiemDisabled","marginBottom","display","step","margin","marginRight","backgroundColor","contactFormFilled","DatePickerExampleSimple","n","handleSetAppointmentDate","checkDisableDate","modalActions","handleSubmit","maxWidth","marginTop","padding","height","renderStepActions","evt","key","payload","handleSetAppointmentMeridiem","value","marginLeft","val","handleSetAppointmentSlot","renderAppointmentTimes","newValue","validateEmail","validatePhone","renderAppointmentConfirmation"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AppBar from \"material-ui/AppBar\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport moment from \"moment\";\nimport DatePicker from \"material-ui/DatePicker\";\nimport Dialog from \"material-ui/Dialog\";\nimport SelectField from \"material-ui/SelectField\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport TextField from \"material-ui/TextField\";\nimport SnackBar from \"material-ui/Snackbar\";\nimport Card from \"material-ui/Card\";\nimport {\n  Step,\n  Stepper,\n  StepLabel,\n  StepContent\n} from \"material-ui/Stepper\";\nimport { RadioButton, RadioButtonGroup } from \"material-ui/RadioButton\";\nimport axios from \"axios\";\n\nconst API_BASE = \"http://localhost:8080/\";\n\nclass AppointmentApp extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      schedule: [],\n      confirmationModalOpen: false,\n      appointmentDateSelected: false,\n      appointmentMeridiem: 0,\n      validEmail: true,\n      validPhone: true,\n      finished: false,\n      smallScreen: window.innerWidth < 768,\n      stepIndex: 0\n    };\n  }\n  componentWillMount() {\n    axios.get(API_BASE + `api/retrieveSlots`).then(response => {\n      console.log(\"response via db: \", response.data);\n      this.handleDBReponse(response.data);\n    });\n  }\n  handleSetAppointmentDate(date) {\n    this.setState({ appointmentDate: date, confirmationTextVisible: true });\n  }\n\n  handleSetAppointmentSlot(slot) {\n    this.setState({ appointmentSlot: slot });\n  }\n  handleSetAppointmentMeridiem(meridiem) {\n    this.setState({ appointmentMeridiem: meridiem });\n  }\n  handleSubmit() {\n    this.setState({ confirmationModalOpen: false });\n    const newAppointment = {\n      name: this.state.firstName + \" \" + this.state.lastName,\n      email: this.state.email,\n      phone: this.state.phone,\n      slot_date: moment(this.state.appointmentDate).format(\"YYYY-DD-MM\"),\n      slot_time: this.state.appointmentSlot\n    };\n    axios\n      .post(API_BASE + \"api/appointmentCreate\", newAppointment)\n      .then(response =>\n        this.setState({\n          confirmationSnackbarMessage: \"Appointment succesfully added!\",\n          confirmationSnackbarOpen: true,\n          processed: true\n        })\n      )\n      .catch(err => {\n        console.log(err);\n        return this.setState({\n          confirmationSnackbarMessage: \"Appointment failed to save.\",\n          confirmationSnackbarOpen: true\n        });\n      });\n  }\n  \n  handleNext = () => {\n    const { stepIndex } = this.state;\n    this.setState({\n      stepIndex: stepIndex + 1,\n      finished: stepIndex >= 2\n    });\n  };\n\n  handlePrev = () => {\n    const { stepIndex } = this.state;\n    if (stepIndex > 0) {\n      this.setState({ stepIndex: stepIndex - 1 });\n    }\n  };\n  validateEmail(email) {\n    const regex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return regex.test(email)\n      ? this.setState({ email: email, validEmail: true })\n      : this.setState({ validEmail: false });\n  }\n  validatePhone(phoneNumber) {\n    const regex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n    return regex.test(phoneNumber)\n      ? this.setState({ phone: phoneNumber, validPhone: true })\n      : this.setState({ validPhone: false });\n  }\n  checkDisableDate(day) {\n    const dateString = moment(day).format(\"YYYY-DD-MM\");\n    return (\n      this.state.schedule[dateString] === true ||\n      moment(day)\n        .startOf(\"day\")\n        .diff(moment().startOf(\"day\")) < 0\n    );\n  }\n\n  \n  handleDBReponse(response) {\n    const appointments = response;\n    const today = moment().startOf(\"day\"); //start of today 12 am\n    const initialSchedule = {};\n    initialSchedule[today.format(\"YYYY-DD-MM\")] = true;\n    const schedule = !appointments.length\n      ? initialSchedule\n      : appointments.reduce((currentSchedule, appointment) => {\n          const { slot_date, slot_time } = appointment;\n          const dateString = moment(slot_date, \"YYYY-DD-MM\").format(\n            \"YYYY-DD-MM\"\n          );\n          !currentSchedule[slot_date]\n            ? (currentSchedule[dateString] = Array(8).fill(false))\n            : null;\n          Array.isArray(currentSchedule[dateString])\n            ? (currentSchedule[dateString][slot_time] = true)\n            : null;\n          return currentSchedule;\n        }, initialSchedule);\n\n    for (let day in schedule) {\n      let slots = schedule[day];\n      slots.length ? slots.every(slot => slot === true) ? (schedule[day] = true) : null : null;}\n\n    this.setState({\n      schedule: schedule\n    });\n  }\n  renderAppointmentConfirmation() {\n    const spanStyle = { color: \"#00C853\" };\n    return (\n      <section>\n        <p>\n          Name:{\" \"}\n          <span style={spanStyle}>\n            {this.state.firstName} {this.state.lastName}\n          </span>\n        </p>\n        <p>\n          Number: <span style={spanStyle}>{this.state.phone}</span>\n        </p>\n        <p>\n          Email: <span style={spanStyle}>{this.state.email}</span>\n        </p>\n        <p>\n          Appointment:{\" \"}\n          <span style={spanStyle}>\n            {moment(this.state.appointmentDate).format(\n              \"dddd[,] MMMM Do[,] YYYY\"\n            )}\n          </span>{\" \"}\n          at{\" \"}\n          <span style={spanStyle}>\n            {moment()\n              .hour(9)\n              .minute(0)\n              .add(this.state.appointmentSlot, \"hours\")\n              .format(\"h:mm a\")}\n          </span>\n        </p>\n      </section>\n    );\n  }\n  renderAppointmentTimes() {\n    if (!this.state.isLoading) {\n      const slots = [...Array(8).keys()];\n      return slots.map(slot => {\n        const appointmentDateString = moment(this.state.appointmentDate).format(\n          \"YYYY-DD-MM\"\n        );\n        const time1 = moment()\n          .hour(9)\n          .minute(0)\n          .add(slot, \"hours\");\n        const time2 = moment()\n          .hour(9)\n          .minute(0)\n          .add(slot + 1, \"hours\");\n        const scheduleDisabled = this.state.schedule[appointmentDateString]\n          ? this.state.schedule[\n              moment(this.state.appointmentDate).format(\"YYYY-DD-MM\")\n            ][slot]\n          : false;\n        const meridiemDisabled = this.state.appointmentMeridiem\n          ? time1.format(\"a\") === \"am\"\n          : time1.format(\"a\") === \"pm\";\n        return (\n          <RadioButton\n            label={time1.format(\"h:mm a\") + \" - \" + time2.format(\"h:mm a\")}\n            key={slot}\n            value={slot}\n            style={{\n              marginBottom: 15,\n              display: meridiemDisabled ? \"none\" : \"inherit\"\n            }}\n            disabled={scheduleDisabled || meridiemDisabled}\n          />\n        );\n      });\n    } else {\n      return null;\n    }\n  }\n\n  renderStepActions(step) {\n    const { stepIndex } = this.state;\n\n    return (\n      <div style={{ margin: \"12px 0\" }}>\n        <RaisedButton\n          label={stepIndex === 2 ? \"Finish\" : \"Next\"}\n          disableTouchRipple={true}\n          disableFocusRipple={true}\n          primary={true}\n          onClick={this.handleNext}\n          backgroundColor=\"#00C853 !important\"\n          style={{ marginRight: 12, backgroundColor: \"#00C853\" }}\n        />\n        {step > 0 && (\n          <FlatButton\n            label=\"Back\"\n            disabled={stepIndex === 0}\n            disableTouchRipple={true}\n            disableFocusRipple={true}\n            onClick={this.handlePrev}\n          />\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      finished,\n      isLoading,\n      smallScreen,\n      stepIndex,\n      confirmationModalOpen,\n      confirmationSnackbarOpen,\n      ...data\n    } = this.state;\n    const contactFormFilled =\n      data.firstName &&\n      data.lastName &&\n      data.phone &&\n      data.email &&\n      data.validPhone &&\n      data.validEmail;\n    const DatePickerExampleSimple = () => (\n      <div>\n        <DatePicker\n          hintText=\"Select Date\"\n          mode={smallScreen ? \"portrait\" : \"landscape\"}\n          onChange={(n, date) => this.handleSetAppointmentDate(date)}\n          shouldDisableDate={day => this.checkDisableDate(day)}\n        />\n      </div>\n    );\n    const modalActions = [\n      <FlatButton\n        label=\"Cancel\"\n        primary={false}\n        onClick={() => this.setState({ confirmationModalOpen: false })}\n      />,\n      <FlatButton\n        label=\"Confirm\"\n        style={{ backgroundColor: \"#00C853 !important\" }}\n        primary={true}\n        onClick={() => this.handleSubmit()}\n      />\n    ];\n    return (\n      <div>\n        <AppBar\n          title=\"Appointment Scheduler\"\n          iconClassNameRight=\"muidocs-icon-navigation-expand-more\"\n        />\n        <section\n          style={{\n            maxWidth: !smallScreen ? \"80%\" : \"100%\",\n            margin: \"auto\",\n            marginTop: !smallScreen ? 20 : 0\n          }}\n        >\n          <Card\n            style={{\n              padding: \"12px 12px 25px 12px\",\n              height: smallScreen ? \"100vh\" : null\n            }}\n          >\n            <Stepper\n              activeStep={stepIndex}\n              orientation=\"vertical\"\n              linear={false}\n            >\n              <Step>\n                <StepLabel>\n                  Choose an available day for your appointment\n                </StepLabel>\n                <StepContent>\n                  {DatePickerExampleSimple()}\n                  {this.renderStepActions(0)}\n                </StepContent>\n              </Step>\n              <Step disabled={!data.appointmentDate}>\n                <StepLabel>\n                  Choose an available time for your appointment\n                </StepLabel>\n                <StepContent>\n                  <SelectField\n                    floatingLabelText=\"AM/PM\"\n                    value={data.appointmentMeridiem}\n                    onChange={(evt, key, payload) =>\n                      this.handleSetAppointmentMeridiem(payload)\n                    }\n                    selectionRenderer={value => (value ? \"PM\" : \"AM\")}\n                  >\n                    <MenuItem value={0} primaryText=\"AM\" />\n                    <MenuItem value={1} primaryText=\"PM\" />\n                  </SelectField>\n                  <RadioButtonGroup\n                    style={{\n                      marginTop: 15,\n                      marginLeft: 15\n                    }}\n                    name=\"appointmentTimes\"\n                    defaultSelected={data.appointmentSlot}\n                    onChange={(evt, val) => this.handleSetAppointmentSlot(val)}\n                  >\n                    {this.renderAppointmentTimes()}\n                  </RadioButtonGroup>\n                  {this.renderStepActions(1)}\n                </StepContent>\n              </Step>\n              <Step>\n                <StepLabel>\n                  Share your contact information with us and we'll send you a\n                  reminder\n                </StepLabel>\n                <StepContent>\n                  <p>\n                    <section>\n                      <TextField\n                        style={{ display: \"block\" }}\n                        name=\"first_name\"\n                        hintText=\"First Name\"\n                        floatingLabelText=\"First Name\"\n                        onChange={(evt, newValue) =>\n                          this.setState({ firstName: newValue })\n                        }\n                      />\n                      <TextField\n                        style={{ display: \"block\" }}\n                        name=\"last_name\"\n                        hintText=\"Last Name\"\n                        floatingLabelText=\"Last Name\"\n                        onChange={(evt, newValue) =>\n                          this.setState({ lastName: newValue })\n                        }\n                      />\n                      <TextField\n                        style={{ display: \"block\" }}\n                        name=\"email\"\n                        hintText=\"youraddress@mail.com\"\n                        floatingLabelText=\"Email\"\n                        errorText={\n                          data.validEmail ? null : \"Enter a valid email address\"\n                        }\n                        onChange={(evt, newValue) =>\n                          this.validateEmail(newValue)\n                        }\n                      />\n                      <TextField\n                        style={{ display: \"block\" }}\n                        name=\"phone\"\n                        hintText=\"+2348995989\"\n                        floatingLabelText=\"Phone\"\n                        errorText={\n                          data.validPhone ? null : \"Enter a valid phone number\"\n                        }\n                        onChange={(evt, newValue) =>\n                          this.validatePhone(newValue)\n                        }\n                      />\n                      <RaisedButton\n                        style={{ display: \"block\", backgroundColor: \"#00C853\" }}\n                        label={\n                          contactFormFilled\n                            ? \"Schedule\"\n                            : \"Fill out your information to schedule\"\n                        }\n                        labelPosition=\"before\"\n                        primary={true}\n                        fullWidth={true}\n                        onClick={() =>\n                          this.setState({\n                            confirmationModalOpen: !this.state\n                              .confirmationModalOpen\n                          })\n                        }\n                        disabled={!contactFormFilled || data.processed}\n                        style={{ marginTop: 20, maxWidth: 100 }}\n                      />\n                    </section>\n                  </p>\n                  {this.renderStepActions(2)}\n                </StepContent>\n              </Step>\n            </Stepper>\n          </Card>\n          <Dialog\n            modal={true}\n            open={confirmationModalOpen}\n            actions={modalActions}\n            title=\"Confirm your appointment\"\n          >\n            {this.renderAppointmentConfirmation()}\n          </Dialog>\n          <SnackBar\n            open={confirmationSnackbarOpen || isLoading}\n            message={\n              isLoading ? \"Loading... \" : data.confirmationSnackbarMessage || \"\"\n            }\n            autoHideDuration={10000}\n            onRequestClose={() =>\n              this.setState({ confirmationSnackbarOpen: false })\n            }\n          />\n        </section>\n      </div>\n    );\n  }\n}\nexport default AppointmentApp;\n"]},"metadata":{},"sourceType":"module"}